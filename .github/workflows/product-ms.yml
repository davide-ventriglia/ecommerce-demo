name: Product Microservice CI

env:
  MICROSERVICE_NAME: product-microservice
  REPO_NAME: ${{ github.event.repository.name }}
  DOCKER_OWNER_NAME: davideventrigliaswd

on:
  push:
    paths:
      - '${{ env.MICROSERVICE_NAME }}/**'
    branches: [ "main" ]
  pull_request:
    paths:
      - '${{ env.MICROSERVICE_NAME }}/**'
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        queries: +security-and-quality
    # Manual build 
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - run: |
        cd ./${{ env.MICROSERVICE_NAME }}
        mvn -B package --file pom.xml
    # Code Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  build:
    needs: analyze
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build with Maven & Docker build
      run: |
        cd ./${{ env.MICROSERVICE_NAME }}
        mvn -B package --file pom.xml
        TAG="$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
        docker build . --tag ${{ env.DOCKER_OWNER_NAME }}/${{ env.REPO_NAME }}-${{ env.MICROSERVICE_NAME }}:$TAG
        docker push ${{ env.DOCKER_OWNER_NAME }}/${{ env.REPO_NAME }}-${{ env.MICROSERVICE_NAME }}:$TAG
